Документация за Team Based Project File:

Линк за свързване: http://localhost:8088/ProjectBookStore/LoginServlet
 - Използва се локален host и server, защото не бях сигурен колко време ще отнеме да кача базата на външен server
 - Трябва Tomcat 8 и Mysql да се свалят и настроят
 - базата се казва bookstore и е в папка DB и сторната във файл bookstore.sql
 - съдържа таблици и данните, с които е тествано
 - Сложен е драйверът в самия проект и навсякъде по проекта е видима канекцията до mysql
 - User за mysql e root, а паролата е празна стойност, сменете стойностите в проекта според вашите  сетнати потребител и парола във вашия mysql
 
 
 Таблици в базата bookStore:
 - book (съдържа всички детайли - catalog_number,foreign_literature,name_of_publishing, numbers_of_book,....);
 - enum_values съдържа 2-та типа потребители (продавач, администратор);
 
 - users съдържа (user_id,first_name,last_name,user_enum_type_id,password);
   Разпознаването в Login Form, става по първото и последното име на потребителя (case insensitive);
   Не съм сложил и паролата(не е хеширана) да се проверява дали е коректна, защото много код стана;
   
   Това са потребителите в users (администратори и един продавач): 
   
   admin: Plamen Terziev, Nedko Nikolov, Martin Spasov
   password:admin
   
   seller: Test Testov
   passsword:user
   
   
   Има foreign_key user_enum_type_id и id - таблици users, enum_values за разпознаване потребителят дали е  администратор или продавач.
   
   Описание: 
   -при извикване на http://localhost:8088/ProjectBookStore/LoginServlet (при мен порта е 8088)  се зарежда логин формата.
   
   След логването ,ако са коректни имената на потребителя, се зарежда view-to bookList.jsp.
   Ако служителят е administrator ще вижда освен списъка с книги и всички бутони:
   - за добавяне, продажба, редактиране и триене на книга
   - полето (Enter search book title) за търсене на книга работи с ajax, 
     чете се всеки въведен символ в полето и динамично намалява резултатите списък с книги според търсенето
   - в bookList.jsp е използван bootstrap за по-добра визуализация
   - При натискане на бутоните Add Book и Edit се зарежда addBook.jsp 
     и се проверява дали е натиснат бутона Add или Edit; Ако е натиснат Edit полетата се попълват динамично(взимам ги според id-то на книгата)м
	 След добавяне или ъпдейт на книга и след submit-а на формата се редиректва към bookList.jsp с вече добавена или редактирана книга
	 и съобщение за успешно записване на данните (направено е надписа да изчезва след 2 секунди, да не стои излишно на view-то);
	 
    - При натискане на бутона Sale динамично се намаляват бройките към съответната книга и пак се изписва надпис за успешна продажба на книга;
	  Книги на които са им са се изчерпали бройките не се визуализират.
	  
	Ако служителят е продавач, то той има достъп само до полето за търсене по title на книга и до бутона Sale.

	 

   
   
   
   
   
